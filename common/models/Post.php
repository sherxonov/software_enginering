<?php

namespace common\models;

use Yii;
use yii\behaviors\TimestampBehavior;
use yii\web\UploadedFile;

/**
 * This is the model class for table "post".
 *
 * @property int $int
 * @property string $title
 * @property string $keywords
 * @property string $short_desk
 * @property string $full_desk
 * @property int $author_id
 * @property int $created_at
 * @property int $updated_at
 * @property string $image
 * @property string $publish_date
 * @property string $lang
 *
 * @property PostCategory[] $postCategories
 */
class Post extends \yii\db\ActiveRecord
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'post';
    }

    public function behaviors()
    {
        return [
            TimestampBehavior::className()
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['title', 'short_desk', 'full_desk',], 'required'],
            [['short_desk', 'full_desk', 'lang'], 'string'],
            [['author_id', 'created_at', 'updated_at'], 'integer'],
            [['publish_date'], 'safe'],
            [['title', 'keywords', 'image'], 'string', 'max' => 250],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'int' => 'Int',
            'title' => 'Sarlavha',
            'keywords' => 'Kalit so\'z',
            'short_desk' => 'Qisqacha malumot',
            'full_desk' => 'To\'liq malumot',
//            'author_id' => 'Author ID',
//            'created_at' => 'Created ID',
//            'updated_at' => 'Update ID',
            'image' => 'Foto',
            'publish_date' => 'Nashir vaqti',
            'lang' => 'Til',
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getPostCategories()
    {
        return $this->hasMany(PostCategory::className(), ['post_id' => 'int']);
    }

    public function beforeSave($insert)
    {
        $time = time();
        $image = UploadedFile::getInstance($this,'image');
        if ($image != null){
            $filepath = Yii::getAlias('@frontend').'/web/images/'.$time.$image->name;
            $image->saveAs($filepath);
            $this->image = '/images/'.$time.$image->name;
        }

        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }
    public function afterDelete()
    {
        @unlink(Yii::getAlias('@frontent').'/web'.$this->image);
        parent::afterDelete(); // TODO: Change the autogenerated stub
    }
}
